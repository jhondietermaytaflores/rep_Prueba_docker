on:
    push:
        branches:
            - main
            - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Login a DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build la imagen Docker
        run: docker build -t ${{ secrets.DOCKER_USER }}/univ-prueba:latest .

      - name: Publicar imagen a DockerHub
        run: docker push ${{ secrets.DOCKER_USER }}/univ-prueba:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código (docker-compose.yml, setup_vm.sh)
        uses: actions/checkout@v5

      # 1. Configurar acceso SSH
      - name: Configurar agente SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 2. Copiar script de configuración a la VM
      - name: Copiar script de configuración a la VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "setup_vm.sh"
          target: "/tmp/"

      # 3. Ejecutar script de configuración en la VM
      - name: Ejecutar script de instalación en la VM
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            chmod +x /tmp/setup_vm.sh
            /tmp/setup_vm.sh ${{ secrets.SSH_USER }}
            rm /tmp/setup_vm.sh  # eliminar script
      #4 copiar docker-compose.yml a la vm
      - name: Copiar docker-compose.yml a la VM
        uses: appleboy/scp-action@v0.1.4
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            source: "docker-compose.yml"
            target: "/home/${{secrets.SSH_USER}}/deploy/"
      #5 ejecutar docker-compose  en la vm
      - name: Ejecutar docker-compose en la VM
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USER }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
                DEPLOY_PATH="/home/${{secrets.SSH_USER}}/deploy"
                cd $DEPLOY_PATH

                #Detener y limpiar servicios anteriores
                sudo docker-compose down

                #descargar la imagen de dockerhub
                echo ${{secrets.DOCKER_PASSWORD}} | sudo docker login -u ${{secrets.DOCKER_USER}} --password-stdin
                sudo docker-compose pull
                sudo docker-compose up -d --force-recreate
                sudo docker logout
  #envio a correo la ip publica en otro job
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Enviar correo con IP pública
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Despliegue completado "
          body: |
            ¡Hola!
            
            El despliegue se ha completado exitosamente.
            
            Puedes acceder a la aplicacion en:
            -> http://${{ secrets.SSH_HOST }}
            
            
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          secure: true
